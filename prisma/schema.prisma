// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum NodeType {
  ORGANIZATION
  DEPARTMENT
  ROLE
  PROCESS
  TASK
  INTEGRATION
  SOFTWARE_TOOL
  DATA_SOURCE
  ANALYTICS
  AI_COMPONENT
}

model Node {
  id            String       @id @default(uuid())
  type          NodeType
  name          String
  description   String?
  metadata      Json?       // For any type-specific data we might need
  vectorId      String?     // Added for Pinecone vector ID
  
  // Relationships
  fromRelations NodeRelationship[] @relation("FromNode")
  toRelations   NodeRelationship[] @relation("ToNode")
  notes         Note[]

  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  @@map("nodes")
}

model NodeRelationship {
  id            String   @id @default(uuid())
  fromNode      Node     @relation("FromNode", fields: [fromNodeId], references: [id])
  fromNodeId    String
  toNode        Node     @relation("ToNode", fields: [toNodeId], references: [id])
  toNodeId      String
  relationType  String   // e.g., "PARENT_CHILD", "USES", "DEPENDS_ON", etc.
  vectorId      String?  // Added for Pinecone vector ID
  
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@unique([fromNodeId, toNodeId, relationType])
  @@map("node_relationships")
}

model Note {
  id          String    @id @default(uuid())
  content     String
  author      String
  node        Node      @relation(fields: [nodeId], references: [id])
  nodeId      String
  vectorId    String?   // Added for Pinecone vector ID
  
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@map("notes")
}
